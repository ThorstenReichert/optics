# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: publish

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published

env:
  CI: true
  CONFIGURATION: Release
  NUGET_DIRECTORY: ${{ github.workspace }}/nuget
  VERSION: ${{ github.event.release.tag_name || '0.0.0' }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
    - name: 'Setup .Net SDK'
      uses: actions/setup-dotnet@v4
      with: 
        dotnet-version: '9.0.x'
    - name: 'Display .Net SDK Version'
      run: dotnet --version
    - name: Build
      run: dotnet build '${{ github.workspace }}/ThorSoft.Optics/ThorSoft.Optics.sln' -c ${{ env.CONFIGURATION }} /p:CI=${{ env.CI }} /p:Version=${{ env.VERSION }}
    - name: Test
      run: dotnet test '${{ github.workspace }}/ThorSoft.Optics/ThorSoft.Optics.sln' -c ${{ env.CONFIGURATION }}  --no-build /p:CI=${{ env.CI }} /p:Version=${{ env.VERSION }}
    - name: Pack
      run: dotnet pack '${{ github.workspace }}/ThorSoft.Optics/ThorSoft.Optics.Generator/ThorSoft.Optics.Generator.csproj' -c Release --output '${{ env.NUGET_DIRECTORY }}' /p:CI=${{ env.CI }} /p:Version=${{ env.VERSION }}
    - name: Publish Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: package
        path: '${{ env.NUGET_DIRECTORY }}/*.nupkg'
    - name: Publish NuGet
      if: github.event_name == 'release'
      run: dotnet nuget push '${{ env.NUGET_DIRECTORY }}/*.nupkg' --api-key ${{ secrets.NUGET_APIKEY }} --source https://api.nuget.org/v3/index.json